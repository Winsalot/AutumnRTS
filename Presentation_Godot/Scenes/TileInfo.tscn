[gd_scene load_steps=2 format=2]

[sub_resource type="GDScript" id=1]
script/source = "extends Node2D


# Declare member variables here. Examples:
export(bool) var block_path = 0
export(int) var z_level = 0
var real_pos;

var pixel_scale
var params;

# Called when the node enters the scene tree for the first time.
func _ready():
	params = self.get_node(\"/root/PresentationParams\")
	pixel_scale = params.scale
	
	self.position = real_pos * pixel_scale
	
	$Details.set_begin(Vector2(1- pixel_scale.x/2, 1 - pixel_scale.y/2))
	
	#self.get_node(\"Z level\").set_text(\"z:\" + String(z_level))
	#self.get_node(\"Z level\").set_begin(Vector2(1 - pixel_scale.x/2, 5))
	
	#self.get_node(\"Block path\").set_text(\"Block:\" + String(int(block_path)))
	#self.get_node(\"Block path\").set_begin(Vector2(1 - pixel_scale.x/2, -13))
	
	#self.get_node(\"Sprite\").set_region(1)
	#self.get_node(\"Sprite\").set_region_rect(Rect2(10,10, pixel_scale.x -2 , pixel_scale.y -2))
	
	#if block_path:
	#	self.get_node(\"Sprite\").set_modulate(Color(0.3, 0.3, 0.3))
	
	pass # Replace with function body.


func _draw():
	var rect = Rect2(1 - pixel_scale.x/2, 1 - pixel_scale.y/2,pixel_scale.x -2 , pixel_scale.y -2)
	var col = Color(0.349, 0.690, 0.250)   
	if z_level > 0:
		col = Color(0.850, 0.8, 0.211)
	if z_level < 0:
		col = Color(0.364, 0.603, 0.733)
	draw_rect(rect, col, true)
	if block_path:
		draw_rect(rect, Color(0,0,0, 0.4), true)
	pass

# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(_delta):
	if params.detailed_info:
		$Details.set_text(\"b_path: \" + String(int(block_path)) + \"\\n\" + \"z_lvl: \" + String(z_level) + \"\\n\" + \"pos:\" + String(real_pos))
	else:
		$Details.set_text(\"\")
	pass

func set_real_pos(xy):
	real_pos = xy
"

[node name="TileInfo" type="Node2D"]
position = Vector2( 100, 100 )
script = SubResource( 1 )

[node name="Block path" type="Label" parent="."]
visible = false
margin_right = 67.0
margin_bottom = 14.0
text = "Block path"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Z level" type="Label" parent="."]
visible = false
margin_right = 54.0
margin_bottom = 25.0
text = "z level"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Details" type="Label" parent="."]
margin_right = 40.0
margin_bottom = 14.0
__meta__ = {
"_edit_use_anchors_": false
}
